# Generated by Django 4.2.7 on 2025-08-30 11:33

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('session', 'Session Achievement'), ('tournament', 'Tournament Achievement'), ('community', 'Community Achievement'), ('milestone', 'Milestone Achievement')], max_length=20)),
                ('badge_image', models.ImageField(blank=True, null=True, upload_to='achievements/badges/')),
                ('points', models.PositiveIntegerField(default=0)),
                ('earned_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
                'db_table': 'core_achievement',
                'ordering': ['-earned_at'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('genre', models.CharField(max_length=50)),
                ('platform', models.JSONField(default=list)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('developer', models.CharField(blank=True, max_length=100)),
                ('publisher', models.CharField(blank=True, max_length=100)),
                ('rating', models.CharField(blank=True, max_length=10)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='games/covers/')),
                ('screenshots', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'db_table': 'core_game',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='GamePad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('pad_type', models.CharField(choices=[('xbox', 'Xbox Controller'), ('playstation', 'PlayStation Controller'), ('nintendo', 'Nintendo Controller'), ('generic', 'Generic Controller'), ('custom', 'Custom Configuration')], max_length=20)),
                ('configuration', models.JSONField(default=dict)),
                ('is_default', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Game Pad',
                'verbose_name_plural': 'Game Pads',
                'db_table': 'core_game_pad',
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('max_participants', models.PositiveIntegerField(default=4)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField(blank=True, null=True)),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('is_public', models.BooleanField(default=True)),
                ('requirements', models.TextField(blank=True)),
                ('voice_chat_link', models.URLField(blank=True)),
                ('game_server_info', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Game Session',
                'verbose_name_plural': 'Game Sessions',
                'db_table': 'core_game_session',
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='SessionParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('joined', 'Joined'), ('declined', 'Declined'), ('left', 'Left'), ('kicked', 'Kicked')], default='joined', max_length=20)),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Session Participant',
                'verbose_name_plural': 'Session Participants',
                'db_table': 'core_session_participant',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('tournament_type', models.CharField(choices=[('single_elimination', 'Single Elimination'), ('double_elimination', 'Double Elimination'), ('round_robin', 'Round Robin'), ('league', 'League')], max_length=30)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('registration', 'Registration Open'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('max_participants', models.PositiveIntegerField()),
                ('entry_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('prize_pool', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('registration_start', models.DateTimeField()),
                ('registration_end', models.DateTimeField()),
                ('tournament_start', models.DateTimeField()),
                ('tournament_end', models.DateTimeField(blank=True, null=True)),
                ('rules', models.TextField()),
                ('requirements', models.TextField(blank=True)),
                ('banner_image', models.ImageField(blank=True, null=True, upload_to='tournaments/banners/')),
            ],
            options={
                'verbose_name': 'Tournament',
                'verbose_name_plural': 'Tournaments',
                'db_table': 'core_tournament',
                'ordering': ['-tournament_start'],
            },
        ),
        migrations.CreateModel(
            name='TournamentParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('registered', 'Registered'), ('confirmed', 'Confirmed'), ('disqualified', 'Disqualified'), ('withdrawn', 'Withdrawn')], default='registered', max_length=20)),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('seed', models.PositiveIntegerField(blank=True, null=True)),
                ('current_round', models.PositiveIntegerField(default=1)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tournament')),
            ],
            options={
                'verbose_name': 'Tournament Participant',
                'verbose_name_plural': 'Tournament Participants',
                'db_table': 'core_tournament_participant',
            },
        ),
    ]
